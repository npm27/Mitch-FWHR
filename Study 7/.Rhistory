x = c("1", "2", "3")
c(x, 4)
A = matrix(c(1:10), nrow = 2, ncol = 5)
print(A)
A[1, ]
A[, 1]
A[ , 1]
A[ 2, 1]
A[1:2, ]
A[1, 1:2]
airquality
Airquality = airquality
B = c(1, 4, 7, 10)
for (i in B){
total = total + i
}
total = c()
for (i in B){
total = total + i
}
total = 0
for (i in B){
total = total + i
}
total/length(B)
get_mean = function(x) {
total = 0
for (i in B){
total = total + i
}
total/length(B)
}
get_mean(c(1, 2, 3))
get_mean = function(x) {
total = 0
for (i in x){
total = total + i
}
total/length(B)
}
get_mean(c(1, 2, 3))
mean((1, 2, 3))
mean(c(1, 2, 3))
total/length(x)
get_mean = function(x) {
total = 0
for (i in x){
total = total + i
}
total/length(x)
}
get_mean(c(1, 2, 3))
mean(c(1, 2, 3))
14+14+14
42+14
49/4
##Take a look at the data
summary(dat)
setwd("~/")
dat = read.csv("Updated conf plots.csv")
library(ez)
dat = read.csv("Updated conf plots.csv")
#difference scores first
model = ezANOVA(dat,
wid = ID,
between = Encoding,
within = .(Direction, Bin),
dv = Difference,
type = 3,
detailed = T)
#difference scores first
model = ezANOVA(dat,
wid = ID,
between = Encoding,
within = .(Direction, BIN),
dv = Difference,
type = 3,
detailed = T)
#difference scores first
model = ezANOVA(dat,
wid = ID,
between = Encoding,
within = .(Direction, BIN),
dv = Difference2,
type = 3,
detailed = T)
tapply(dat$Encoding, list(dat$Direction, dat$BIN), mean)
View(dat)
tapply(dat$Difference, list(dat$Direction, dat$BIN), mean)
View(dat)
dat = read.csv("Updated conf plots.csv")
View(dat)
#difference scores first
model = ezANOVA(dat,
wid = ID,
between = Encoding,
within = .(Direction, BIN),
dv = Difference,
type = 3,
detailed = T)
tapply(dat$Difference, list(dat$Direction, dat$BIN), mean)
#difference scores first
model = ezANOVA(dat,
wid = ID,
between = Encoding,
within = .(Direction, BIN),
dv = Difference2,
type = 3,
detailed = T)
tapply(dat$Difference, list(dat$Direction, dat$BIN), mean)
read = subset(dat$Encoding,
dat$Encoding == "Read")
IS = subset(dat,
dat$Encoding == "IS")
RL = subset(dat,
dat$Encoding == "RL")
read = subset(dat$Encoding,
dat$Encoding == "Read"
read = subset(dat,
dat$Encoding == "Read")
read = subset(dat,
dat$Encoding == "Read")
tapply(read$Difference, list(read$Direction, read$BIN), mean)
tapply(IS$Difference, list(IS$Direction, IS$BIN), mean)
tapply(RL$Difference, list(RL$Direction, RL$BIN), mean)
tapply(read$Difference2, list(read$Direction, read$BIN), mean)
tapply(IS$Difference2, list(IS$Direction, IS$BIN), mean)
tapply(RL$Difference2, list(RL$Direction, RL$BIN), mean)
#difference scores first
model = ezANOVA(dat,
wid = ID,
between = Encoding,
within = .(Direction, BIN),
dv = Difference2,
type = 3,
detailed = T)
dat$BIN = factor(dat$BIN)
#difference scores first
model = ezANOVA(dat,
wid = ID,
between = Encoding,
within = .(Direction, BIN),
dv = Difference2,
type = 3,
detailed = T)
summary(dat)
with(dat, table(id, Direction, BIN))
with(dat, table(ID, Direction, BIN))
#difference scores first
model = ezANOVA(dat,
wid = ID,
between = .(Encoding, BIN),
within = Direction,
dv = Difference2,
type = 3,
detailed = T)
model
#difference scores first
model = ezANOVA(dat,
wid = ID,
between = .(Encoding, BIN),
within = Direction,
dv = Difference,
type = 3,
detailed = T)
model
#difference scores first
model = ezANOVA(dat,
wid = ID,
between = .(Encoding, BIN),
within = Direction,
dv = Difference,
type = 1,
detailed = T)
model
#difference scores first
model = ezANOVA(dat,
wid = ID,
between = .(Encoding, BIN),
within = Direction,
dv = Difference,
type = 2,
detailed = T)
model
#difference scores first
model = ezANOVA(dat,
wid = ID,
between = .(Encoding, BIN),
within = Direction,
dv = Difference,
type = 3,
detailed = T)
model
#difference scores first
model = ezANOVA(dat,
wid = ID,
between = .(Encoding),
within = Direction,
dv = Difference,
type = 3,
detailed = T)
model
#difference scores first
model = ezANOVA(dat,
wid = ID,
between = .(BIN),
within = Direction,
dv = Difference,
type = 3,
detailed = T)
model
#difference scores first
model = ezANOVA(dat,
wid = ID,
between = .(BIN, Encoding),
within = Direction,
dv = Difference,
type = 3,
detailed = T)
model
#difference scores first
model = ezANOVA(dat,
wid = ID,
between = .(BIN, Encoding),
#within = Direction,
dv = Difference,
type = 3,
detailed = T)
model
#difference scores first
model = ezANOVA(dat,
wid = ID,
between = .(BIN, Encoding),
within = Direction,
dv = Difference2,
type = 3,
detailed = T)
model
setwd("~/GitHub/Emily-Honors-Thesis/Ex 1/2 Analysis/Confidence Plots/SPSS")
library(reshape)
library(ez)
library(readxl)
dat = read_xlsx("EX 1 ANALYSES DATA.xlsx")
View(dat)
dat_long = melt(dat,
measure.vars = c("Subject", "Encoding"))
dat_long = melt(dat,
id.vars = c("Subject", "Encoding"))
dat_long = melt(dat,
id = c("Subject", "Encoding"))
dat_long = melt(dat,
id = c("Subject", "Encoding"))
melt(dat,
id = c("Subject", "Encoding"))
melt(dat,
id = "Encoding")
melt(dat,
id = "Subject")
reshape::melt(dat)
reshape::melt(dat)
dat = data.frame(dat)
reshape::melt(dat)
dat_long = melt(dat,
id = c("Subject", "Encoding"))
View(dat_long)
library(splitstackshape)
substr(dat_long$variable)
substr(dat_long$variable, 1)
substr(dat_long$variable, 1, 1)
dat_long$direction = substr(dat_long$variable, 1, 1)
substring(dat_long$variable, 1)
substring(dat_long$variable, -1)
substring(dat_long$variable, 2)
dat_bin = substring(dat_long$variable, 2)
dat_long$bin = substring(dat_long$variable, 2)
dat_long = dat_long[ , -3]
colnames(dat_long)[3] = "Recall"
dat_long$diff1 = as.numeric(dat_long$bin) - dat_long$Recall
dat_long$diff2 = abs(dat_long$diff1)
####ANOVA TIME####
model = ezANOVA(dat_long,
wid = Subject,
between = .(bin, Encoding),
within = direction,
dv = diff1,
type = 3,
detailed = T)
model
options(scipen = 999)
model
####ANOVA TIME####
model = ezANOVA(dat_long,
wid = Subject,
between = .(bin, Encoding),
within = direction,
dv = diff2,
type = 3,
detailed = T)
model
####ANOVA TIME####
model = ezANOVA(dat_long,
wid = Subject,
between = .(bin, Encoding),
within = direction,
dv = diff1,
type = 3,
detailed = T)
model
##descriptives
tapply(dat_long$diff1, list(dat_long$direction, dat_long$bIN), mean)
##descriptives
tapply(dat_long$diff1, list(dat_long$direction, dat_long$bin), mean)
read = subset(dat_long,
dat_long$Encoding == "Read")
IS = subset(dat_long,
dat_long$Encoding == "IS")
RL = subset(dat_long,
dat_long$Encoding == "RL")
tapply(read$diff1, list(read$direction, read$bin), mean)
read$diff1
read = subset(dat_long,
dat_long$Encoding == "READ")
tapply(read$diff1, list(read$direction, read$bin), mean)
tapply(IS$diff1, list(IS$direction, IS$bin), mean)
tapply(RL$diff1, list(RL$direction, RL$bin), mean)
####ANOVA TIME####
model = ezANOVA(dat_long,
wid = Subject,
between = Encoding,
within = .(bin, direction),
dv = diff1,
type = 3,
detailed = T)
model
####ANOVA TIME####
model = ezANOVA(dat_long,
wid = Subject,
between = Encoding,
within = .(bin, direction),
dv = diff2,
type = 3,
detailed = T)
model
setwd("~/")
dat = read.csv("Updated conf plots.csv")
library(ez)
tapply(dat$Difference, list(dat$Direction, dat$BIN), mean)
read = subset(dat,
dat$Encoding == "Read")
IS = subset(dat,
dat$Encoding == "IS")
RL = subset(dat,
dat$Encoding == "RL")
tapply(read$Difference2, list(read$Direction, read$BIN), mean)
tapply(IS$Difference2, list(IS$Direction, IS$BIN), mean)
tapply(RL$Difference2, list(RL$Direction, RL$BIN), mean)
dat$BIN = factor(dat$BIN)
#difference scores first
model = ezANOVA(dat,
wid = ID,
between = .(BIN, Encoding, Direction),
dv = Difference2,
type = 3,
detailed = T)
model
130*4
48+12+2
setwd("~/GitHub/Mitch-FWHR/Study 6")
####Set up####
##load libraries
library(memisc)
library(reshape)
library(ez)
library(lme4)
library(car)
##turn of scientific notation
options(scipen = 999)
##load data
dat = as.data.set(spss.system.file("Study 6.sav"))
dat = as.data.frame(dat)
View(dat)
#build the fwhr data
fwhr_dat = dat[ , c(1, 3:22, 33)]
#melt
fwhr_long = melt(fwhr_dat,
id.vars = c("id", "Sex"))
View(fwhr_long)
#fix column names
colnames(fwhr_long)[3:4] = c("fwhr", "score")
setwd("~/GitHub/Mitch-FWHR/Study 3")
####Set up####
##load libraries
library(memisc)
library(reshape)
library(ez)
library(lme4)
library(car)
library(effects) #maybe use this for interactions?
library(ggplot2) #plot the things!
library(emmeans)
##turn of scientific notation
options(scipen = 999)
##load data
dat = as.data.set(spss.system.file("Study 3.sav"))
dat = as.data.frame(dat)
##see what we're working with
summary(dat)
length(unique(dat$id))
##Need to get the data in the right shape
##for the PCAT items, going to assume that the order is the same as Hofer et al. (2018)
#1-4 are protection items ##Mitch, please correct me if I'm wrong!
#5-10 are nurture items
####Build the datasets####
##dat_scale will be used for Parenting motives analysis (SEX x fWHR x MOTIVE)
dat_scale = dat[ , c(1:11, 15:24, 28:37, 41:50, 54:63, 67:76, 80:89, 93:102, 106:115, 119:128, ##HIGH
132:141, 145:154, 158:167, 171:180, 184:193, 197:206, 210:219, 223:232, 236:245, 249:258, ##LOW
262)] ##Sex
##get into long format
dat_scale = melt(dat_scale, id.vars = c("id", "Sex"))
#Make the fWHR variable
dat_scale$fWHR = c(rep("High", nrow(dat_scale) / 2), rep("Low", nrow(dat_scale) / 2))
#Make the motive variable
dat_scale$variable = gsub("_2", "P", dat_scale$variable)
dat_scale$variable = gsub("_3", "P", dat_scale$variable)
dat_scale$variable = gsub("_4", "P", dat_scale$variable)
dat_scale$variable = gsub("_5", "N", dat_scale$variable)
dat_scale$variable = gsub("_6", "N", dat_scale$variable)
dat_scale$variable = gsub("_7", "N", dat_scale$variable)
dat_scale$variable = gsub("_8", "N", dat_scale$variable)
dat_scale$variable = gsub("_9", "N", dat_scale$variable)
dat_scale$variable = gsub("_10", "N", dat_scale$variable)
dat_scale$variable = gsub("_1", "P", dat_scale$variable)
dat_scale$variable = sub('.*(?=.$)', '',
dat_scale$variable,
perl = T)
colnames(dat_scale)[3] = "Motive"
colnames(dat_scale)[4] = "Score"
dat_scale$Score = as.numeric(dat_scale$Score)
View(dat)
View(dat_scale)
setwd("~/GitHub/Mitch-FWHR/Study 6")
####Set up####
##load libraries
library(memisc)
library(reshape)
library(ez)
library(lme4)
library(car)
##turn of scientific notation
options(scipen = 999)
##load data
dat = as.data.set(spss.system.file("Study 6.sav"))
dat = as.data.frame(dat)
##make columns for the different variables
#need high and low for fwhr. Also need both pcat subscales (p and w?)
##I think the easiest way to do this indexing two copies of the data
#first will be sex and fwhr variables (will make a high and low)
#second will be sex and pcat (p and w -- better ask mitch if this is right)
###fwhr
##build the fwhr data
fwhr_dat = dat[ , c(1, 3:22, 33)]
#melt
fwhr_long = melt(fwhr_dat,
id.vars = c("id", "Sex"))
#fix column names
colnames(fwhr_long)[3:4] = c("fwhr", "score")
View(fwhr_long)
####Set up####
##load libraries
library(memisc)
library(reshape)
library(ez)
library(lme4)
library(car)
##turn of scientific notation
options(scipen = 999)
##load data
dat = as.data.set(spss.system.file("Study 6.sav"))
dat = as.data.frame(dat)
##make columns for the different variables
#need high and low for fwhr. Also need both pcat subscales (p and w?)
View(dat)
###fwhr
##build the fwhr data
fwhr_dat = dat[ , c(1, 3:22, 33, 39, 40)]
#melt
fwhr_long = melt(fwhr_dat,
id.vars = c("id", "Sex",
"Nurture_AVG", "Protect_AVG"))
View(fwhr_long)
#fix column names
colnames(fwhr_long)[5:6] = c("fwhr", "score")
#fix fwhr column (just make it H's and L's)
substr(fwhr_long$fwhr, start = 1, stop = 2)
#fix fwhr column (just make it H's and L's)
substr(fwhr_long$fwhr, start = 1, stop = 1)
#fix fwhr column (just make it H's and L's)
fwhr_long$fwhr = substr(fwhr_long$fwhr, start = 1, stop = 1)
####Model time####
##Make the final model first
model.final = lmer(score ~ Sex * fwhr + Nurture_AVG + Protect_AVG + (1|id),
data = fwhr_long,
REML = FALSE)
score
fwhr_long$score = as.numeric(fwhr_long$score)
####Model time####
##Make the final model first
model.final = lmer(score ~ Sex * fwhr + Nurture_AVG + Protect_AVG + (1|id),
data = fwhr_long,
REML = FALSE)
summary(model.final)
Anova(model.final)
